# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [
      (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "thunderbolt" "nvme" "usb_storage" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.kernelParams = [ "acpi_osi=linux" "module_blacklist=hid_sensor_hub" ];
  boot.extraModulePackages = [ ];
  boot.kernelPackages = pkgs.linuxPackages_5_18;

  sops.defaultSopsFile = ./secrets.yaml;

  nix =
    {
      package = pkgs.nixFlakes;
      extraOptions = ''
        experimental-features = nix-command flakes
      '';
      trustedUsers = [ "root" "dovalperin" ];
    };

  boot.loader.efi.canTouchEfiVariables = true;

  boot.loader.grub = {
    enable = true;
    version = 2;
    efiSupport = true;
    enableCryptodisk = true;
    device = "nodev";
  };

  boot.initrd.luks.devices = {
    crypted = {
      device = "/dev/disk/by-uuid/a534a4dd-e713-4b6b-af35-109a73125bbb";
      preLVM = true;
    };
  };

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/c7d9bf56-7a6e-4028-991e-60df822555d6";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    {
      device = "/dev/disk/by-uuid/9151-05A2";
      fsType = "vfat";
    };

  swapDevices =
    [{ device = "/dev/disk/by-uuid/4ca26fd7-e615-4b54-a75d-5615e51246a9"; }];

  dov = {
    tailscale.enable = true;
  };

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s13f0u3u2.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp166s0.useDHCP = lib.mkDefault true;
  networking = {
    hostName = "spaceship";
    firewall = {
      enable = true;
      trustedInterfaces = [ "tailscale0" ];
      allowedUDPPorts = [ config.services.tailscale.port 51820 ];
    };
    wg-quick.interfaces = {
      wg0 = {
        address = [ "fdaa:0:6b39:a7b:ce2:0:a:2/120" ];
        dns = [ "fdaa:0:6b39::3" ];
        privateKeyFile = config.sops.secrets.flywgexternalpriv.path;

        peers = [
          {
            publicKey = "R2in3C4C5I1AVyoSrmsOgSkhPDKAegwUg6zwkLrhryk=";
            allowedIPs = [ "fdaa:0:6b39::/48" ];
            endpoint = "iad1.gateway.6pn.dev:51820";
            persistentKeepalive = 25;
          }
        ];
      };
    };

  };

  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

  sops.age.keyFile = "/home/dovalperin/.config/sops/age/keys.txt";
  sops.age.sshKeyPaths = [ ];

  sops.secrets = {
    ts_key = {
      owner = config.users.users.dovalperin.name;
    };
    flywgexternalpriv = {
      owner = config.users.users.dovalperin.name;
    };
  };

  services.printing.enable = true;
  services.avahi.enable = true;
  services.avahi.nssmdns = true;
  services.printing.drivers = [
    pkgs.hplipWithPlugin
  ];

  virtualisation.virtualbox.host.enable = true;
  users.extraGroups.vboxusers.members = [ "dovalperin" ];
  virtualisation.virtualbox.host.enableExtensionPack = true;
  virtualisation.containers.registries.insecure = ["humblegeoffrey"];
}
